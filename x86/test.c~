#include <stdio.h>
#include <stdint.h>
#include <math.h>

#include <stdlib.h>
#include <string.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>

#define PWM_STEP 0x101

#define S1_R 0
#define S1_G 1
#define S1_B 2

#define S2_R 3
#define S2_G 4
#define S2_B 5

#define S3_R 6
#define S3_G 7
#define S3_B 8

#define S4_R 9
#define S4_G 10
#define S4_B 11

#define S5_R 12
#define S5_G 13
#define S5_B 14




uint8_t strip_ccm[15];
uint8_t strip_rgb[15];
float   strip_delta[15];
float   strip_float[15];

int strip_rgb_to_ccm(){
  int i;
  for(i=0;i<15;i++){
    strip_ccm[i] = strip_rgb[i] * PWM_STEP;
  }
}

void apply_rbg_to_pwm(){
  strip_rgb_to_ccm();
  //
  // TODO
  // update the CCM registers
  //
}





void fade_to(uint8_t to[], uint16_t steps ,uint8_t init){
  uint8_t start;
  uint8_t target;
  int i;
  float f;
  if(init){
    for(i=0;i<15;i++){
      strip_delta[i] = ((float)(to[i] - strip_rgb[i])) / ((float)steps);
      strip_float[i] = strip_rgb[i];
    }    
  }else{
  for(i=0;i<15;i++){
    strip_float[i] += strip_delta[i];
    f =  strip_float[i] ;
    //printf("%f ",f);
    if(f < 0){
      strip_rgb[i] = 0;
    }else{
      strip_rgb[i] = floorf(f);
    }  
  }
  apply_rbg_to_pwm();
  }
  //putchar('\n');  
}


Display *d;
Window w,root;

int createwin(){

  XEvent e;
  const char *msg = "Hello, World!";
  int s;
 
  d = XOpenDisplay(NULL);
  if (d == NULL) {
    fprintf(stderr, "Cannot open display\n");
    exit(1);
  }
 
  s = DefaultScreen(d);
  w = XCreateSimpleWindow(d, RootWindow(d, s), 10, 10, 100, 100, 1,
			  BlackPixel(d, s), WhitePixel(d, s));
  XSelectInput(d, w, ExposureMask | KeyPressMask);
  XMapWindow(d, w);
  root = RootWindow(d, s);
/*  while (1) {
    XNextEvent(d, &e);
    if (e.type == Expose) {
      XFillRectangle(d, w, DefaultGC(d, s), 20, 20, 10, 10);
      XDrawString(d, w, DefaultGC(d, s), 10, 50, msg, strlen(msg));
    }
    if (e.type == KeyPress)
      break;
  }
 
*/

}

int main(){
  

  Visual *visual;
  createwin(); 
  int s = DefaultScreen(d);
  XVisualInfo* visinfo = (XVisualInfo *) malloc( sizeof(XVisualInfo) );
  if (!XMatchVisualInfo( d, s, 24, TrueColor, visinfo )) {
    printf("Couldn't get 24-bit TrueColor visual!\n");
    exit(1);
  }

  Colormap cmap = XCreateColormap( d, root, visinfo->visual, AllocNone );;
  XColor xcolour;

  xcolour.flags = DoRed | DoGreen | DoBlue;


  int i,j;
  int steps = 100;
  // init
  uint8_t strip_to[15];
  for(i=0;i<15;i++){
    strip_ccm[i] = 0;
    strip_rgb[i] = 128;
    strip_to[i] =  0;   
  }
   strip_to[0] = 255;   
   strip_to[4] = 255;   
   strip_to[8] = 255;

    strip_to[9] = 255;   
   strip_to[10] = 255;   

   strip_to[12] = 255;
   strip_to[14] = 255;

  // FADE _ TEST
  putchar('\n');
  //
  fade_to(strip_to, steps ,1);
  for(j=0;j<15;j++)
    printf("%-3f ",strip_delta[j]);
  putchar('\n');
  putchar('\n');
  for(j=0;j<15;j++)
    printf("%3d ",strip_to[j]);
  putchar('\n');
  
  for(i=0;i<steps;i++){
    fade_to(strip_to, steps ,0);
    printf("%-4d: ",i);
    
    for(j=0;j<15;j++){
      printf("%3d ",strip_rgb[j]);
    }
    putchar('\n');

   
    // I guess XParseColor will work here
    xcolour.red   = (strip_rgb[0]<< 8) ; 
    xcolour.green = (strip_rgb[1]<< 8) ; 
    xcolour.blue  = (strip_rgb[2]<< 8) ; 
  
    XAllocColor(d, cmap, &xcolour);    
    XSetForeground(d, DefaultGC(d, s), xcolour.pixel);
    XFillRectangle(d, w, DefaultGC(d, s), 20, 20, 10, 10);

    xcolour.red   = (strip_rgb[3]<< 8) ; 
    xcolour.green = (strip_rgb[4]<< 8) ; 
    xcolour.blue  = (strip_rgb[5]<< 8) ; 
  
    XAllocColor(d, cmap, &xcolour);    
    XSetForeground(d, DefaultGC(d, s), xcolour.pixel);
    XFillRectangle(d, w, DefaultGC(d, s), 30, 20, 10, 10);

    xcolour.red   = (strip_rgb[6]<< 8) ; 
    xcolour.green = (strip_rgb[7]<< 8) ; 
    xcolour.blue  = (strip_rgb[8]<< 8) ; 
  
    XAllocColor(d, cmap, &xcolour);    
    XSetForeground(d, DefaultGC(d, s), xcolour.pixel);
    XFillRectangle(d, w, DefaultGC(d, s), 40, 20, 10, 10);
    
    xcolour.red   = (strip_rgb[9]<< 8) ; 
    xcolour.green = (strip_rgb[10]<< 8) ; 
    xcolour.blue  = (strip_rgb[11]<< 8) ; 
  
    XAllocColor(d, cmap, &xcolour);    
    XSetForeground(d, DefaultGC(d, s), xcolour.pixel);
    XFillRectangle(d, w, DefaultGC(d, s), 50, 20, 10, 10);
    
    xcolour.red   = (strip_rgb[12]<< 8) ; 
    xcolour.green = (strip_rgb[13]<< 8) ; 
    xcolour.blue  = (strip_rgb[14]<< 8) ; 
  
    XAllocColor(d, cmap, &xcolour);    
    XSetForeground(d, DefaultGC(d, s), xcolour.pixel);
    XFillRectangle(d, w, DefaultGC(d, s), 60, 20, 10, 10);


    usleep(10000);

  }
  
  
  


  XCloseDisplay(d);
  return 0;
}
